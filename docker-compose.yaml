services:
  api-gateway:
    image: armand96/gabz:api-gateway-v1
    build:
      context: .
      dockerfile: ./apps/api-gateway/Dockerfile
    # command: npm run start:dev api-gateway
    env_file:
      - ./apps/api-gateway/.env
    ports:
      - '3000:3000'
    volumes:
      - .:/usr/src/app
    deploy: 
      replicas: 1
      update_config: 
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
  product:
    image: armand96/gabz:product-v1
    depends_on:
      - mysql
    build:
      context: .
      dockerfile: ./apps/product/Dockerfile
    # command: npm run start:dev product
    env_file:
      - ./apps/product/.env
    volumes:
      - .:/usr/src/app
    deploy:
      replicas: 2  # Scale horizontally
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
  mysql:
    image: mysql
    container_name: mysql
    ports:
      - '3307:3306'
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: product_read_db
      MYSQL_USER: dev
      MYSQL_PASSWORD: password
    volumes:
      - mysql_data:/var/lib/mysql
      # - .docker/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh  # Add custom initialization script

volumes:
  mysql_data:
networks:
  gabz-network:
    driver: bridge